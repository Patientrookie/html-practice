* {
    margin: 0;
    padding: 0;
}

li {
    /* list-style: none 去掉小圆点 */
    list-style: none;
}

body {
    width: 100%;
    height: 100%;
    /* overflow 属性规定当内容溢出元素框时发生的事情。 */
    /* overflow: hidden 内容会被修剪，并且其余内容是不可见的 */
    overflow: hidden;
}

.main {
    width: 100%;
    height: 100%;
    /* perspective 设置从何处查看一个元素的角度 */
    perspective: 800;
}

.cubeBox {
    width: 200px;
    height: 200px;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -100px 0 0 -100px;
    /* transform-style 使被转换的子元素保留其 3D 转换 preserve-3d 子元素保留其3D位置 */
    transform-style: preserve-3d;
}

.cube {
    width: 100px;
    height: 100px;
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -50px 0 0 -50px;
    /*transform-style使被转换的子元素保留其3D转换preserve-3d子元素保留其3D位置*/transform-style: preserve-3d;
    transform: rotateX(-10deg) rotateY(45deg);
    -webkit-transform: rotateX(-10deg) rotateY(45deg);
    -moz-transform: rotateX(-10deg) rotateY(45deg);
    -ms-transform: rotateX(-10deg) rotateY(45deg);
    -o-transform: rotateX(-10deg) rotateY(45deg);
    animation: turn 4s linear infinite;
    -webkit-animation: turn 4s linear infinite;
}

.cube li {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    transition: all 2s ease ;
    -webkit-transition: all 2s ease ;
    -moz-transition: all 2s ease ;
    -ms-transition: all 2s ease ;
    -o-transition: all 2s ease ;
}

.cube li video {
    width: 100%;
    height: 100%;
}

/* :nth-child(n) 选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。 */
/* translateZ 定义3D转换  rotateX 定义3D旋转 */
.cube li:nth-child(1){
    transform: rotateX(0deg) translateZ(50px);
    -webkit-transform: rotateX(0deg) translateZ(50px);
    -moz-transform: rotateX(0deg) translateZ(50px);
    -ms-transform: rotateX(0deg) translateZ(50px);
    -o-transform: rotateX(0deg) translateZ(50px);
}

.cube li:nth-child(2){
    transform: rotateX(180deg) translateZ(50px);
    -webkit-transform: rotateX(180deg) translateZ(50px);
    -moz-transform: rotateX(180deg) translateZ(50px);
    -ms-transform: rotateX(180deg) translateZ(50px);
    -o-transform: rotateX(180deg) translateZ(50px);
}

.cube li:nth-child(3){
    transform: rotateX(-90deg) translateZ(50px);
    -webkit-transform: rotateX(-90deg) translateZ(50px);
    -moz-transform: rotateX(-90deg) translateZ(50px);
    -ms-transform: rotateX(-90deg) translateZ(50px);
    -o-transform: rotateX(-90deg) translateZ(50px);
}

.cube li:nth-child(4){
    transform: rotateX(90deg) translateZ(50px);
    -webkit-transform: rotateX(90deg) translateZ(50px);
    -moz-transform: rotateX(90deg) translateZ(50px);
    -ms-transform: rotateX(90deg) translateZ(50px);
    -o-transform: rotateX(90deg) translateZ(50px);
}

.cube li:nth-child(5){
    transform: rotateY(-90deg) translateZ(50px);
    -webkit-transform: rotateY(-90deg) translateZ(50px);
    -moz-transform: rotateY(-90deg) translateZ(50px);
    -ms-transform: rotateY(-90deg) translateZ(50px);
    -o-transform: rotateY(-90deg) translateZ(50px);
}

.cube li:nth-child(6){
    transform: rotateY(90deg) translateZ(50px);
    -webkit-transform: rotateY(90deg) translateZ(50px);
    -moz-transform: rotateY(90deg) translateZ(50px);
    -ms-transform: rotateY(90deg) translateZ(50px);
    -o-transform: rotateY(90deg) translateZ(50px);
}


.bigCube {
    width: 200px;
    height: 200px;
    margin: -100px 0 0 -100px;
}

.bigCube li:nth-child(1){
    transform: rotateX(0deg) translateZ(100px);
    -webkit-transform: rotateX(0deg) translateZ(100px);
    -moz-transform: rotateX(0deg) translateZ(100px);
    -ms-transform: rotateX(0deg) translateZ(100px);
    -o-transform: rotateX(0deg) translateZ(100px);
}

.bigCube li:nth-child(2){
    transform: rotateX(180deg) translateZ(100px);
    -webkit-transform: rotateX(180deg) translateZ(100px);
    -moz-transform: rotateX(180deg) translateZ(100px);
    -ms-transform: rotateX(180deg) translateZ(100px);
    -o-transform: rotateX(180deg) translateZ(100px);
}

.bigCube li:nth-child(3){
    transform: rotateX(-90deg) translateZ(100px);
    -webkit-transform: rotateX(-90deg) translateZ(100px);
    -moz-transform: rotateX(-90deg) translateZ(100px);
    -ms-transform: rotateX(-90deg) translateZ(100px);
    -o-transform: rotateX(-90deg) translateZ(100px);
}

.bigCube li:nth-child(4){
    transform: rotateX(90deg) translateZ(100px);
    -webkit-transform: rotateX(90deg) translateZ(100px);
    -moz-transform: rotateX(90deg) translateZ(100px);
    -ms-transform: rotateX(90deg) translateZ(100px);
    -o-transform: rotateX(90deg) translateZ(100px);
}

.bigCube li:nth-child(5){
    transform: rotateY(-90deg) translateZ(100px);
    -webkit-transform: rotateY(-90deg) translateZ(100px);
    -moz-transform: rotateY(-90deg) translateZ(100px);
    -ms-transform: rotateY(-90deg) translateZ(100px);
    -o-transform: rotateY(-90deg) translateZ(100px);
}

.bigCube li:nth-child(6){
    transform: rotateY(90deg) translateZ(100px);
    -webkit-transform: rotateY(90deg) translateZ(100px);
    -moz-transform: rotateY(90deg) translateZ(100px);
    -ms-transform: rotateY(90deg) translateZ(100px);
    -o-transform: rotateY(90deg) translateZ(100px);
}

@keyframes turn{
    0% {
        transform: rotateX(-13deg) rotateY(0deg);
        -webkit-transform: rotateX(-13deg) rotateY(0deg);
        -moz-transform: rotateX(-13deg) rotateY(0deg);
        -ms-transform: rotateX(-13deg) rotateY(0deg);
        -o-transform: rotateX(-13deg) rotateY(0deg);
    }
    100% {
        transform: rotateX(-13deg) rotateY(360deg);
        -webkit-transform: rotateX(-13deg) rotateY(360deg);
        -moz-transform: rotateX(-13deg) rotateY(360deg);
        -ms-transform: rotateX(-13deg) rotateY(360deg);
        -o-transform: rotateX(-13deg) rotateY(360deg);
    }
}

.cubeBox:hover .bigCube li:nth-child(1){
    animation-play-state:paused;
    transform: rotateX(0deg) translateZ(200px);
}

.cubeBox:hover .bigCube li:nth-child(2){
    transform: rotateX(180deg) translateZ(200px);
    -webkit-transform: rotateX(180deg) translateZ(200px);
    -moz-transform: rotateX(180deg) translateZ(200px);
    -ms-transform: rotateX(180deg) translateZ(200px);
    -o-transform: rotateX(180deg) translateZ(200px);
}

.cubeBox:hover .bigCube li:nth-child(3){
    transform: rotateX(-90deg) translateZ(200px);
    -webkit-transform: rotateX(-90deg) translateZ(200px);
    -moz-transform: rotateX(-90deg) translateZ(200px);
    -ms-transform: rotateX(-90deg) translateZ(200px);
    -o-transform: rotateX(-90deg) translateZ(200px);
}

.cubeBox:hover .bigCube li:nth-child(4){
    transform: rotateX(90deg) translateZ(200px);
    -webkit-transform: rotateX(90deg) translateZ(200px);
    -moz-transform: rotateX(90deg) translateZ(200px);
    -ms-transform: rotateX(90deg) translateZ(200px);
    -o-transform: rotateX(90deg) translateZ(200px);
}

.cubeBox:hover .bigCube li:nth-child(5){
    transform: rotateY(-90deg) translateZ(200px);
    -webkit-transform: rotateY(-90deg) translateZ(200px);
    -moz-transform: rotateY(-90deg) translateZ(200px);
    -ms-transform: rotateY(-90deg) translateZ(200px);
    -o-transform: rotateY(-90deg) translateZ(200px);
}

.cubeBox:hover .bigCube li:nth-child(6){
    transform: rotateY(90deg) translateZ(200px);
    -webkit-transform: rotateY(90deg) translateZ(200px);
    -moz-transform: rotateY(90deg) translateZ(200px);
    -ms-transform: rotateY(90deg) translateZ(200px);
    -o-transform: rotateY(90deg) translateZ(200px);
}

.bg {
    width: 100%;
    height: 100%;
    /* object-fit 属性指定元素的内容应该如何去适应指定容器的高度与宽度 fill 不保证保持原有的比例，内容拉伸填满整个内容容器 */
    object-fit: fill;
}